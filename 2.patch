From 4284f757389db649e2fb9eb31f2261ab2f563537 Mon Sep 17 00:00:00 2001
From: Joyce <azurebeats@hotmail.nl>
Date: Sun, 26 Apr 2020 10:12:54 +0200
Subject: [PATCH] Modified the Take Items option to instead be Change Items,
 like I should have done in the first place.

---
 .../Events/Commands/EventCommands.cs          |  10 +-
 Intersect (Core)/GameObjects/Events/Enums.cs  |   2 +-
 .../Forms/Editors/Events/CommandPrinter.cs    |  14 +-
 ...EventCommand_ChangeItemsByTag.Designer.cs} | 132 ++++++---
 ...ag.cs => EventCommand_ChangeItemsByTag.cs} |  23 +-
 ...esx => EventCommand_ChangeItemsByTag.resx} |  61 ++--
 .../Forms/Editors/Events/frmEvent.Designer.cs | 274 +++++++++---------
 .../Forms/Editors/Events/frmEvent.cs          |   8 +-
 Intersect.Editor/Intersect.Editor.csproj      |  10 +-
 Intersect.Editor/Localization/Strings.cs      |  20 +-
 .../Entities/Events/CommandProcessing.cs      |  69 +++--
 Intersect.Server/Entities/Player.cs           |   7 +-
 12 files changed, 356 insertions(+), 274 deletions(-)
 rename Intersect.Editor/Forms/Editors/Events/Event Commands/{EventCommand_TakeItemsByTag.Designer.cs => EventCommand_ChangeItemsByTag.Designer.cs} (57%)
 rename Intersect.Editor/Forms/Editors/Events/Event Commands/{EventCommand_TakeItemsByTag.cs => EventCommand_ChangeItemsByTag.cs} (61%)
 rename Intersect.Editor/Forms/Editors/Events/Event Commands/{EventCommand_TakeItemsByTag.resx => EventCommand_ChangeItemsByTag.resx} (87%)

diff --git a/Intersect (Core)/GameObjects/Events/Commands/EventCommands.cs b/Intersect (Core)/GameObjects/Events/Commands/EventCommands.cs
index 9b3214e3..135e7a7e 100644
--- a/Intersect (Core)/GameObjects/Events/Commands/EventCommands.cs	
+++ b/Intersect (Core)/GameObjects/Events/Commands/EventCommands.cs	
@@ -464,15 +464,15 @@ public override void FixBranchIds(Dictionary<Guid, Guid> idDict)
 
     }
 
-    public class TakeItemsByTag : EventCommand
+    public class ChangeItemsByTag : EventCommand
     {
 
         //For Json Deserialization
-        public TakeItemsByTag()
+        public ChangeItemsByTag()
         {
         }
 
-        public TakeItemsByTag(Dictionary<Guid, List<EventCommand>> commandLists)
+        public ChangeItemsByTag(Dictionary<Guid, List<EventCommand>> commandLists)
         {
             for (var i = 0; i < BranchIds.Length; i++)
             {
@@ -481,10 +481,12 @@ public TakeItemsByTag(Dictionary<Guid, List<EventCommand>> commandLists)
             }
         }
 
-        public override EventCommandType Type { get; } = EventCommandType.TakeItemsByTag;
+        public override EventCommandType Type { get; } = EventCommandType.ChangeItemsByTag;
 
         public string Tag { get; set; }
 
+        public bool Add { get; set; } //If !Add then Remove
+
         public int Quantity { get; set; }
 
         public Guid[] BranchIds { get; set; } =
diff --git a/Intersect (Core)/GameObjects/Events/Enums.cs b/Intersect (Core)/GameObjects/Events/Enums.cs
index 3f49f859..e305fdd2 100644
--- a/Intersect (Core)/GameObjects/Events/Enums.cs	
+++ b/Intersect (Core)/GameObjects/Events/Enums.cs	
@@ -216,7 +216,7 @@ public enum EventCommandType
         PlayerLabel,
 
         // Take Items By tag
-        TakeItemsByTag,
+        ChangeItemsByTag,
 
     }
 
diff --git a/Intersect.Editor/Forms/Editors/Events/CommandPrinter.cs b/Intersect.Editor/Forms/Editors/Events/CommandPrinter.cs
index f433e77f..3edbe037 100644
--- a/Intersect.Editor/Forms/Editors/Events/CommandPrinter.cs
+++ b/Intersect.Editor/Forms/Editors/Events/CommandPrinter.cs
@@ -349,8 +349,8 @@ MapInstance map
                             mCommandProperties.Add(clp);
 
                             break;
-                        case EventCommandType.TakeItemsByTag:
-                            var titm = (TakeItemsByTag)commandList[i];
+                        case EventCommandType.ChangeItemsByTag:
+                            var titm = (ChangeItemsByTag)commandList[i];
                             lstEventCommands.Items.Add(
                                 indent +
                                 Strings.EventCommandList.linestart +
@@ -368,7 +368,7 @@ MapInstance map
                             mCommandProperties.Add(clp);
 
                             //When the item(s) were successfully taken:
-                            lstEventCommands.Items.Add(indent + "      : " + Strings.EventCommandList.itemstakenbytag);
+                            lstEventCommands.Items.Add(indent + "      : " + Strings.EventCommandList.itemchangedbytag);
                             clp = new CommandListProperties {
                                 Editable = false,
                                 MyIndex = i,
@@ -384,7 +384,7 @@ MapInstance map
                             );
 
                             //When the items failed to be given/taken:
-                            lstEventCommands.Items.Add(indent + "      : " + Strings.EventCommandList.itemsnottakenbytag);
+                            lstEventCommands.Items.Add(indent + "      : " + Strings.EventCommandList.itemnotchangedbytag);
                             clp = new CommandListProperties {
                                 Editable = false,
                                 MyIndex = i,
@@ -399,7 +399,7 @@ MapInstance map
                                 mCommandProperties, map
                             );
 
-                            lstEventCommands.Items.Add(indent + "      : " + Strings.EventCommandList.endtakeitemsbytag);
+                            lstEventCommands.Items.Add(indent + "      : " + Strings.EventCommandList.endchangeitemsbytag);
                             clp = new CommandListProperties {
                                 Editable = false,
                                 MyIndex = i,
@@ -681,10 +681,10 @@ private static string GetCommandText(ChangeItemsCommand command, MapInstance map
             );
         }
 
-        private static string GetCommandText(TakeItemsByTag command, MapInstance map)
+        private static string GetCommandText(ChangeItemsByTag command, MapInstance map)
         {
 
-            return Strings.EventCommandList.takeitemsbytag.ToString(command.Tag);
+            return Strings.EventCommandList.changeitemsbytag.ToString(command.Tag);
         }
 
         private static string GetCommandText(EquipItemCommand command, MapInstance map)
diff --git a/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_TakeItemsByTag.Designer.cs b/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_ChangeItemsByTag.Designer.cs
similarity index 57%
rename from Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_TakeItemsByTag.Designer.cs
rename to Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_ChangeItemsByTag.Designer.cs
index 2e756720..2bbda1b7 100644
--- a/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_TakeItemsByTag.Designer.cs	
+++ b/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_ChangeItemsByTag.Designer.cs	
@@ -2,7 +2,7 @@
 
 namespace Intersect.Editor.Forms.Editors.Events.Event_Commands
 {
-    partial class EventCommandTakeItemsBytag
+    partial class EventCommandChangeItemsBytag
     {
         /// <summary>
         /// Required designer variable.
@@ -30,41 +30,78 @@ protected override void Dispose(bool disposing)
         /// </summary>
         private void InitializeComponent()
         {
-            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(EventCommandTakeItemsBytag));
-            this.grpTakeItemBytag = new DarkUI.Controls.DarkGroupBox();
+            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(EventCommandChangeItemsBytag));
+            this.grpChangeItemsBytag = new DarkUI.Controls.DarkGroupBox();
+            this.cmbAction = new DarkUI.Controls.DarkComboBox();
+            this.lblAction = new System.Windows.Forms.Label();
             this.nudGiveTakeAmount = new DarkUI.Controls.DarkNumericUpDown();
             this.lblAmount = new System.Windows.Forms.Label();
             this.cmbTags = new DarkUI.Controls.DarkComboBox();
             this.lblTag = new System.Windows.Forms.Label();
             this.btnCancel = new DarkUI.Controls.DarkButton();
             this.btnSave = new DarkUI.Controls.DarkButton();
-            this.grpTakeItemBytag.SuspendLayout();
+            this.grpChangeItemsBytag.SuspendLayout();
             ((System.ComponentModel.ISupportInitialize)(this.nudGiveTakeAmount)).BeginInit();
             this.SuspendLayout();
-            //
-            // grpTakeItemBytag
-            //
-            this.grpTakeItemBytag.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(60)))), ((int)(((byte)(63)))), ((int)(((byte)(65)))));
-            this.grpTakeItemBytag.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
-            this.grpTakeItemBytag.Controls.Add(this.nudGiveTakeAmount);
-            this.grpTakeItemBytag.Controls.Add(this.lblAmount);
-            this.grpTakeItemBytag.Controls.Add(this.cmbTags);
-            this.grpTakeItemBytag.Controls.Add(this.lblTag);
-            this.grpTakeItemBytag.Controls.Add(this.btnCancel);
-            this.grpTakeItemBytag.Controls.Add(this.btnSave);
-            this.grpTakeItemBytag.ForeColor = System.Drawing.Color.Gainsboro;
-            this.grpTakeItemBytag.Location = new System.Drawing.Point(3, 3);
-            this.grpTakeItemBytag.Name = "grpTakeItemBytag";
-            this.grpTakeItemBytag.Size = new System.Drawing.Size(193, 133);
-            this.grpTakeItemBytag.TabIndex = 17;
-            this.grpTakeItemBytag.TabStop = false;
-            this.grpTakeItemBytag.Text = "Take Item By Tag:";
-            //
+            // 
+            // grpChangeItemsBytag
+            // 
+            this.grpChangeItemsBytag.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(60)))), ((int)(((byte)(63)))), ((int)(((byte)(65)))));
+            this.grpChangeItemsBytag.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
+            this.grpChangeItemsBytag.Controls.Add(this.cmbAction);
+            this.grpChangeItemsBytag.Controls.Add(this.lblAction);
+            this.grpChangeItemsBytag.Controls.Add(this.nudGiveTakeAmount);
+            this.grpChangeItemsBytag.Controls.Add(this.lblAmount);
+            this.grpChangeItemsBytag.Controls.Add(this.cmbTags);
+            this.grpChangeItemsBytag.Controls.Add(this.lblTag);
+            this.grpChangeItemsBytag.Controls.Add(this.btnCancel);
+            this.grpChangeItemsBytag.Controls.Add(this.btnSave);
+            this.grpChangeItemsBytag.ForeColor = System.Drawing.Color.Gainsboro;
+            this.grpChangeItemsBytag.Location = new System.Drawing.Point(3, 3);
+            this.grpChangeItemsBytag.Name = "grpChangeItemsBytag";
+            this.grpChangeItemsBytag.Size = new System.Drawing.Size(193, 133);
+            this.grpChangeItemsBytag.TabIndex = 17;
+            this.grpChangeItemsBytag.TabStop = false;
+            this.grpChangeItemsBytag.Text = "Change Items By Tag:";
+            // 
+            // cmbAction
+            // 
+            this.cmbAction.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(69)))), ((int)(((byte)(73)))), ((int)(((byte)(74)))));
+            this.cmbAction.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
+            this.cmbAction.BorderStyle = System.Windows.Forms.ButtonBorderStyle.Solid;
+            this.cmbAction.ButtonColor = System.Drawing.Color.FromArgb(((int)(((byte)(43)))), ((int)(((byte)(43)))), ((int)(((byte)(43)))));
+            this.cmbAction.ButtonIcon = ((System.Drawing.Bitmap)(resources.GetObject("cmbAction.ButtonIcon")));
+            this.cmbAction.DrawDropdownHoverOutline = false;
+            this.cmbAction.DrawFocusRectangle = false;
+            this.cmbAction.DrawMode = System.Windows.Forms.DrawMode.OwnerDrawFixed;
+            this.cmbAction.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
+            this.cmbAction.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
+            this.cmbAction.ForeColor = System.Drawing.Color.Gainsboro;
+            this.cmbAction.FormattingEnabled = true;
+            this.cmbAction.Items.AddRange(new object[] {
+            "Give",
+            "Take"});
+            this.cmbAction.Location = new System.Drawing.Point(64, 15);
+            this.cmbAction.Name = "cmbAction";
+            this.cmbAction.Size = new System.Drawing.Size(115, 21);
+            this.cmbAction.TabIndex = 28;
+            this.cmbAction.Text = "Give";
+            this.cmbAction.TextPadding = new System.Windows.Forms.Padding(2);
+            // 
+            // lblAction
+            // 
+            this.lblAction.AutoSize = true;
+            this.lblAction.Location = new System.Drawing.Point(5, 17);
+            this.lblAction.Name = "lblAction";
+            this.lblAction.Size = new System.Drawing.Size(40, 13);
+            this.lblAction.TabIndex = 27;
+            this.lblAction.Text = "Action:";
+            // 
             // nudGiveTakeAmount
-            //
+            // 
             this.nudGiveTakeAmount.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(69)))), ((int)(((byte)(73)))), ((int)(((byte)(74)))));
             this.nudGiveTakeAmount.ForeColor = System.Drawing.Color.Gainsboro;
-            this.nudGiveTakeAmount.Location = new System.Drawing.Point(64, 46);
+            this.nudGiveTakeAmount.Location = new System.Drawing.Point(64, 69);
             this.nudGiveTakeAmount.Maximum = new decimal(new int[] {
             100000,
             0,
@@ -83,18 +120,18 @@ private void InitializeComponent()
             0,
             0,
             0});
-            //
+            // 
             // lblAmount
-            //
+            // 
             this.lblAmount.AutoSize = true;
-            this.lblAmount.Location = new System.Drawing.Point(6, 48);
+            this.lblAmount.Location = new System.Drawing.Point(5, 71);
             this.lblAmount.Name = "lblAmount";
             this.lblAmount.Size = new System.Drawing.Size(46, 13);
             this.lblAmount.TabIndex = 25;
             this.lblAmount.Text = "Amount:";
-            //
+            // 
             // cmbTags
-            //
+            // 
             this.cmbTags.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(69)))), ((int)(((byte)(73)))), ((int)(((byte)(74)))));
             this.cmbTags.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.cmbTags.BorderStyle = System.Windows.Forms.ButtonBorderStyle.Solid;
@@ -107,23 +144,24 @@ private void InitializeComponent()
             this.cmbTags.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
             this.cmbTags.ForeColor = System.Drawing.Color.Gainsboro;
             this.cmbTags.FormattingEnabled = true;
-            this.cmbTags.Location = new System.Drawing.Point(64, 19);
+            this.cmbTags.Location = new System.Drawing.Point(64, 42);
             this.cmbTags.Name = "cmbTags";
             this.cmbTags.Size = new System.Drawing.Size(115, 21);
             this.cmbTags.TabIndex = 22;
+            this.cmbTags.Text = null;
             this.cmbTags.TextPadding = new System.Windows.Forms.Padding(2);
-            //
+            // 
             // lblTag
-            //
+            // 
             this.lblTag.AutoSize = true;
-            this.lblTag.Location = new System.Drawing.Point(5, 21);
+            this.lblTag.Location = new System.Drawing.Point(5, 45);
             this.lblTag.Name = "lblTag";
             this.lblTag.Size = new System.Drawing.Size(29, 13);
             this.lblTag.TabIndex = 21;
             this.lblTag.Text = "Tag:";
-            //
+            // 
             // btnCancel
-            //
+            // 
             this.btnCancel.Location = new System.Drawing.Point(89, 104);
             this.btnCancel.Name = "btnCancel";
             this.btnCancel.Padding = new System.Windows.Forms.Padding(5);
@@ -131,9 +169,9 @@ private void InitializeComponent()
             this.btnCancel.TabIndex = 20;
             this.btnCancel.Text = "Cancel";
             this.btnCancel.Click += new System.EventHandler(this.btnCancel_Click);
-            //
+            // 
             // btnSave
-            //
+            // 
             this.btnSave.Location = new System.Drawing.Point(8, 104);
             this.btnSave.Name = "btnSave";
             this.btnSave.Padding = new System.Windows.Forms.Padding(5);
@@ -141,18 +179,18 @@ private void InitializeComponent()
             this.btnSave.TabIndex = 19;
             this.btnSave.Text = "Ok";
             this.btnSave.Click += new System.EventHandler(this.btnSave_Click);
-            //
-            // EventCommandTakeItemsBytag
-            //
+            // 
+            // EventCommandChangeItemsBytag
+            // 
             this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
             this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
             this.AutoSize = true;
             this.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(45)))), ((int)(((byte)(45)))), ((int)(((byte)(48)))));
-            this.Controls.Add(this.grpTakeItemBytag);
-            this.Name = "EventCommandTakeItemsBytag";
+            this.Controls.Add(this.grpChangeItemsBytag);
+            this.Name = "EventCommandChangeItemsBytag";
             this.Size = new System.Drawing.Size(205, 139);
-            this.grpTakeItemBytag.ResumeLayout(false);
-            this.grpTakeItemBytag.PerformLayout();
+            this.grpChangeItemsBytag.ResumeLayout(false);
+            this.grpChangeItemsBytag.PerformLayout();
             ((System.ComponentModel.ISupportInitialize)(this.nudGiveTakeAmount)).EndInit();
             this.ResumeLayout(false);
 
@@ -160,12 +198,14 @@ private void InitializeComponent()
 
         #endregion
 
-        private DarkGroupBox grpTakeItemBytag;
+        private DarkGroupBox grpChangeItemsBytag;
         private DarkButton btnCancel;
         private DarkButton btnSave;
         private DarkComboBox cmbTags;
         private System.Windows.Forms.Label lblTag;
         private System.Windows.Forms.Label lblAmount;
         private DarkNumericUpDown nudGiveTakeAmount;
+        private DarkComboBox cmbAction;
+        private System.Windows.Forms.Label lblAction;
     }
 }
diff --git a/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_TakeItemsByTag.cs b/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_ChangeItemsByTag.cs
similarity index 61%
rename from Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_TakeItemsByTag.cs
rename to Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_ChangeItemsByTag.cs
index 3ae45b28..72c82e10 100644
--- a/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_TakeItemsByTag.cs	
+++ b/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_ChangeItemsByTag.cs	
@@ -10,16 +10,16 @@
 namespace Intersect.Editor.Forms.Editors.Events.Event_Commands
 {
 
-    public partial class EventCommandTakeItemsBytag : UserControl
+    public partial class EventCommandChangeItemsBytag : UserControl
     {
 
         private readonly FrmEvent mEventEditor;
 
         private EventPage mCurrentPage;
 
-        private TakeItemsByTag mMyCommand;
+        private ChangeItemsByTag mMyCommand;
 
-        public EventCommandTakeItemsBytag(TakeItemsByTag refCommand, EventPage refPage, FrmEvent editor)
+        public EventCommandChangeItemsBytag(ChangeItemsByTag refCommand, EventPage refPage, FrmEvent editor)
         {
             InitializeComponent();
             mMyCommand = refCommand;
@@ -29,6 +29,7 @@ public EventCommandTakeItemsBytag(TakeItemsByTag refCommand, EventPage refPage,
             cmbTags.Items.Clear();
             cmbTags.Items.AddRange(ItemBase.AllTags.OrderBy(x => x).ToArray());
             cmbTags.SelectedIndex = cmbTags.Items.IndexOf(mMyCommand.Tag ?? "");
+            cmbAction.SelectedIndex = mMyCommand.Add ? 0 : 1;
             if (mMyCommand.Quantity < 1)
             {
                 nudGiveTakeAmount.Value = 1;
@@ -43,16 +44,22 @@ public EventCommandTakeItemsBytag(TakeItemsByTag refCommand, EventPage refPage,
 
         private void InitLocalization()
         {
-            lblAmount.Text = Strings.EventTakeItemByTag.amount;
-            grpTakeItemBytag.Text = Strings.EventTakeItemByTag.title;
-            lblTag.Text = Strings.EventTakeItemByTag.tag;
-            btnSave.Text = Strings.EventTakeItemByTag.okay;
-            btnCancel.Text = Strings.EventTakeItemByTag.cancel;
+            lblAmount.Text = Strings.EventChangeItemsByTag.amount;
+            grpChangeItemsBytag.Text = Strings.EventChangeItemsByTag.title;
+            lblTag.Text = Strings.EventChangeItemsByTag.tag;
+            btnSave.Text = Strings.EventChangeItemsByTag.okay;
+            btnCancel.Text = Strings.EventChangeItemsByTag.cancel;
+            cmbAction.Items.Clear();
+            for (var i = 0; i < Strings.EventChangeItemsByTag.actions.Count; i++)
+            {
+                cmbAction.Items.Add(Strings.EventChangeItemsByTag.actions[i]);
+            }
         }
 
         private void btnSave_Click(object sender, EventArgs e)
         {
             mMyCommand.Tag = cmbTags.GetItemText(cmbTags.SelectedItem);
+            mMyCommand.Add = !Convert.ToBoolean(cmbAction.SelectedIndex);
             mMyCommand.Quantity = (int) nudGiveTakeAmount.Value;
             mEventEditor.FinishCommandEdit();
         }
diff --git a/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_TakeItemsByTag.resx b/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_ChangeItemsByTag.resx
similarity index 87%
rename from Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_TakeItemsByTag.resx
rename to Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_ChangeItemsByTag.resx
index 2f34d5e1..3d2650f4 100644
--- a/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_TakeItemsByTag.resx	
+++ b/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_ChangeItemsByTag.resx	
@@ -1,17 +1,17 @@
 <?xml version="1.0" encoding="utf-8"?>
 <root>
-  <!--
-    Microsoft ResX Schema
-
+  <!-- 
+    Microsoft ResX Schema 
+    
     Version 2.0
-
-    The primary goals of this format is to allow a simple XML format
-    that is mostly human readable. The generation and parsing of the
-    various data types are done through the TypeConverter classes
+    
+    The primary goals of this format is to allow a simple XML format 
+    that is mostly human readable. The generation and parsing of the 
+    various data types are done through the TypeConverter classes 
     associated with the data types.
-
+    
     Example:
-
+    
     ... ado.net/XML headers & schema ...
     <resheader name="resmimetype">text/microsoft-resx</resheader>
     <resheader name="version">2.0</resheader>
@@ -26,36 +26,36 @@
         <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
         <comment>This is a comment</comment>
     </data>
-
-    There are any number of "resheader" rows that contain simple
+                
+    There are any number of "resheader" rows that contain simple 
     name/value pairs.
-
-    Each data row contains a name, and value. The row also contains a
-    type or mimetype. Type corresponds to a .NET class that support
-    text/value conversion through the TypeConverter architecture.
-    Classes that don't support this are serialized and stored with the
+    
+    Each data row contains a name, and value. The row also contains a 
+    type or mimetype. Type corresponds to a .NET class that support 
+    text/value conversion through the TypeConverter architecture. 
+    Classes that don't support this are serialized and stored with the 
     mimetype set.
-
-    The mimetype is used for serialized objects, and tells the
-    ResXResourceReader how to depersist the object. This is currently not
+    
+    The mimetype is used for serialized objects, and tells the 
+    ResXResourceReader how to depersist the object. This is currently not 
     extensible. For a given mimetype the value must be set accordingly:
-
-    Note - application/x-microsoft.net.object.binary.base64 is the format
-    that the ResXResourceWriter will generate, however the reader can
+    
+    Note - application/x-microsoft.net.object.binary.base64 is the format 
+    that the ResXResourceWriter will generate, however the reader can 
     read any of the formats listed below.
-
+    
     mimetype: application/x-microsoft.net.object.binary.base64
-    value   : The object must be serialized with
+    value   : The object must be serialized with 
             : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
             : and then encoded with base64 encoding.
-
+    
     mimetype: application/x-microsoft.net.object.soap.base64
-    value   : The object must be serialized with
+    value   : The object must be serialized with 
             : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
             : and then encoded with base64 encoding.
 
     mimetype: application/x-microsoft.net.object.bytearray.base64
-    value   : The object must be serialized into a byte array
+    value   : The object must be serialized into a byte array 
             : using a System.ComponentModel.TypeConverter
             : and then encoded with base64 encoding.
     -->
@@ -118,6 +118,13 @@
     <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
   <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <data name="cmbAction.ButtonIcon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+    <value>
+        iVBORw0KGgoAAAANSUhEUgAAAAkAAAAFCAYAAACXU8ZrAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
+        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAvSURBVBhXY4iJiflPCDP8//8f
+        r0KQPFgRLoUwObgiEMamAIRRFIEwuoL///8zAAC5cW+geGnZqAAAAABJRU5ErkJggg==
+</value>
+  </data>
   <data name="cmbTags.ButtonIcon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
     <value>
         iVBORw0KGgoAAAANSUhEUgAAAAkAAAAFCAYAAACXU8ZrAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
diff --git a/Intersect.Editor/Forms/Editors/Events/frmEvent.Designer.cs b/Intersect.Editor/Forms/Editors/Events/frmEvent.Designer.cs
index 2450fa0d..ede71d24 100644
--- a/Intersect.Editor/Forms/Editors/Events/frmEvent.Designer.cs
+++ b/Intersect.Editor/Forms/Editors/Events/frmEvent.Designer.cs
@@ -65,7 +65,7 @@ private void InitializeComponent()
             System.Windows.Forms.TreeNode treeNode18 = new System.Windows.Forms.TreeNode("Change Level");
             System.Windows.Forms.TreeNode treeNode19 = new System.Windows.Forms.TreeNode("Change Spells");
             System.Windows.Forms.TreeNode treeNode20 = new System.Windows.Forms.TreeNode("Change Items");
-            System.Windows.Forms.TreeNode treeNode21 = new System.Windows.Forms.TreeNode("Take Items By Tag");
+            System.Windows.Forms.TreeNode treeNode21 = new System.Windows.Forms.TreeNode("Change Items By Tag");
             System.Windows.Forms.TreeNode treeNode22 = new System.Windows.Forms.TreeNode("Change Sprite");
             System.Windows.Forms.TreeNode treeNode23 = new System.Windows.Forms.TreeNode("Change Face");
             System.Windows.Forms.TreeNode treeNode24 = new System.Windows.Forms.TreeNode("Change Gender");
@@ -222,18 +222,18 @@ private void InitializeComponent()
             this.grpGeneral.SuspendLayout();
             this.pnlTabsContainer.SuspendLayout();
             this.SuspendLayout();
-            //
+            // 
             // lblName
-            //
+            // 
             this.lblName.AutoSize = true;
             this.lblName.Location = new System.Drawing.Point(6, 22);
             this.lblName.Name = "lblName";
             this.lblName.Size = new System.Drawing.Size(38, 13);
             this.lblName.TabIndex = 1;
             this.lblName.Text = "Name:";
-            //
+            // 
             // txtEventname
-            //
+            // 
             this.txtEventname.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(69)))), ((int)(((byte)(73)))), ((int)(((byte)(74)))));
             this.txtEventname.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
             this.txtEventname.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(220)))), ((int)(((byte)(220)))), ((int)(((byte)(220)))));
@@ -242,9 +242,9 @@ private void InitializeComponent()
             this.txtEventname.Size = new System.Drawing.Size(124, 20);
             this.txtEventname.TabIndex = 2;
             this.txtEventname.TextChanged += new System.EventHandler(this.txtEventname_TextChanged);
-            //
+            // 
             // grpEntityOptions
-            //
+            // 
             this.grpEntityOptions.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(45)))), ((int)(((byte)(45)))), ((int)(((byte)(48)))));
             this.grpEntityOptions.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.grpEntityOptions.Controls.Add(this.grpExtra);
@@ -258,9 +258,9 @@ private void InitializeComponent()
             this.grpEntityOptions.TabIndex = 12;
             this.grpEntityOptions.TabStop = false;
             this.grpEntityOptions.Text = "Entity Options";
-            //
+            // 
             // grpExtra
-            //
+            // 
             this.grpExtra.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(45)))), ((int)(((byte)(45)))), ((int)(((byte)(48)))));
             this.grpExtra.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.grpExtra.Controls.Add(this.chkInteractionFreeze);
@@ -275,9 +275,9 @@ private void InitializeComponent()
             this.grpExtra.TabIndex = 9;
             this.grpExtra.TabStop = false;
             this.grpExtra.Text = "Extra";
-            //
+            // 
             // chkInteractionFreeze
-            //
+            // 
             this.chkInteractionFreeze.AutoSize = true;
             this.chkInteractionFreeze.Location = new System.Drawing.Point(6, 41);
             this.chkInteractionFreeze.Name = "chkInteractionFreeze";
@@ -285,9 +285,9 @@ private void InitializeComponent()
             this.chkInteractionFreeze.TabIndex = 6;
             this.chkInteractionFreeze.Text = "Interaction Freeze";
             this.chkInteractionFreeze.CheckedChanged += new System.EventHandler(this.chkInteractionFreeze_CheckedChanged);
-            //
+            // 
             // chkWalkingAnimation
-            //
+            // 
             this.chkWalkingAnimation.AutoSize = true;
             this.chkWalkingAnimation.Location = new System.Drawing.Point(214, 19);
             this.chkWalkingAnimation.Name = "chkWalkingAnimation";
@@ -295,9 +295,9 @@ private void InitializeComponent()
             this.chkWalkingAnimation.TabIndex = 5;
             this.chkWalkingAnimation.Text = "Walking Anim";
             this.chkWalkingAnimation.CheckedChanged += new System.EventHandler(this.chkWalkingAnimation_CheckedChanged);
-            //
+            // 
             // chkDirectionFix
-            //
+            // 
             this.chkDirectionFix.AutoSize = true;
             this.chkDirectionFix.Location = new System.Drawing.Point(156, 19);
             this.chkDirectionFix.Name = "chkDirectionFix";
@@ -305,9 +305,9 @@ private void InitializeComponent()
             this.chkDirectionFix.TabIndex = 4;
             this.chkDirectionFix.Text = "Dir Fix";
             this.chkDirectionFix.CheckedChanged += new System.EventHandler(this.chkDirectionFix_CheckedChanged);
-            //
+            // 
             // chkHideName
-            //
+            // 
             this.chkHideName.AutoSize = true;
             this.chkHideName.Location = new System.Drawing.Point(75, 19);
             this.chkHideName.Name = "chkHideName";
@@ -315,9 +315,9 @@ private void InitializeComponent()
             this.chkHideName.TabIndex = 3;
             this.chkHideName.Text = "Hide Name";
             this.chkHideName.CheckedChanged += new System.EventHandler(this.chkHideName_CheckedChanged);
-            //
+            // 
             // chkWalkThrough
-            //
+            // 
             this.chkWalkThrough.AutoSize = true;
             this.chkWalkThrough.Location = new System.Drawing.Point(6, 19);
             this.chkWalkThrough.Name = "chkWalkThrough";
@@ -325,9 +325,9 @@ private void InitializeComponent()
             this.chkWalkThrough.TabIndex = 2;
             this.chkWalkThrough.Text = "Passable";
             this.chkWalkThrough.CheckedChanged += new System.EventHandler(this.chkWalkThrough_CheckedChanged);
-            //
+            // 
             // grpInspector
-            //
+            // 
             this.grpInspector.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(45)))), ((int)(((byte)(45)))), ((int)(((byte)(48)))));
             this.grpInspector.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.grpInspector.Controls.Add(this.pnlFacePreview);
@@ -343,25 +343,25 @@ private void InitializeComponent()
             this.grpInspector.TabIndex = 7;
             this.grpInspector.TabStop = false;
             this.grpInspector.Text = "Entity Inspector Options";
-            //
+            // 
             // pnlFacePreview
-            //
+            // 
             this.pnlFacePreview.BackgroundImageLayout = System.Windows.Forms.ImageLayout.Stretch;
             this.pnlFacePreview.Location = new System.Drawing.Point(9, 46);
             this.pnlFacePreview.Name = "pnlFacePreview";
             this.pnlFacePreview.Size = new System.Drawing.Size(64, 64);
             this.pnlFacePreview.TabIndex = 12;
-            //
+            // 
             // lblInspectorDesc
-            //
+            // 
             this.lblInspectorDesc.Location = new System.Drawing.Point(79, 42);
             this.lblInspectorDesc.Name = "lblInspectorDesc";
             this.lblInspectorDesc.Size = new System.Drawing.Size(112, 19);
             this.lblInspectorDesc.TabIndex = 11;
             this.lblInspectorDesc.Text = "Inspector Description:";
-            //
+            // 
             // txtDesc
-            //
+            // 
             this.txtDesc.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(69)))), ((int)(((byte)(73)))), ((int)(((byte)(74)))));
             this.txtDesc.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
             this.txtDesc.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(220)))), ((int)(((byte)(220)))), ((int)(((byte)(220)))));
@@ -371,18 +371,18 @@ private void InitializeComponent()
             this.txtDesc.Size = new System.Drawing.Size(231, 50);
             this.txtDesc.TabIndex = 0;
             this.txtDesc.TextChanged += new System.EventHandler(this.txtDesc_TextChanged);
-            //
+            // 
             // chkDisableInspector
-            //
+            // 
             this.chkDisableInspector.Location = new System.Drawing.Point(204, 15);
             this.chkDisableInspector.Name = "chkDisableInspector";
             this.chkDisableInspector.Size = new System.Drawing.Size(107, 21);
             this.chkDisableInspector.TabIndex = 4;
             this.chkDisableInspector.Text = "Disable Inspector";
             this.chkDisableInspector.CheckedChanged += new System.EventHandler(this.chkDisablePreview_CheckedChanged);
-            //
+            // 
             // cmbPreviewFace
-            //
+            // 
             this.cmbPreviewFace.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(69)))), ((int)(((byte)(73)))), ((int)(((byte)(74)))));
             this.cmbPreviewFace.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.cmbPreviewFace.BorderStyle = System.Windows.Forms.ButtonBorderStyle.Solid;
@@ -402,18 +402,18 @@ private void InitializeComponent()
             this.cmbPreviewFace.Text = null;
             this.cmbPreviewFace.TextPadding = new System.Windows.Forms.Padding(2);
             this.cmbPreviewFace.SelectedIndexChanged += new System.EventHandler(this.cmbPreviewFace_SelectedIndexChanged);
-            //
+            // 
             // lblFace
-            //
+            // 
             this.lblFace.AutoSize = true;
             this.lblFace.Location = new System.Drawing.Point(6, 18);
             this.lblFace.Name = "lblFace";
             this.lblFace.Size = new System.Drawing.Size(34, 13);
             this.lblFace.TabIndex = 9;
             this.lblFace.Text = "Face:";
-            //
+            // 
             // grpPreview
-            //
+            // 
             this.grpPreview.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(45)))), ((int)(((byte)(45)))), ((int)(((byte)(48)))));
             this.grpPreview.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.grpPreview.Controls.Add(this.lblAnimation);
@@ -426,18 +426,18 @@ private void InitializeComponent()
             this.grpPreview.TabIndex = 10;
             this.grpPreview.TabStop = false;
             this.grpPreview.Text = "Preview";
-            //
+            // 
             // lblAnimation
-            //
+            // 
             this.lblAnimation.AutoSize = true;
             this.lblAnimation.Location = new System.Drawing.Point(4, 116);
             this.lblAnimation.Name = "lblAnimation";
             this.lblAnimation.Size = new System.Drawing.Size(56, 13);
             this.lblAnimation.TabIndex = 2;
             this.lblAnimation.Text = "Animation:";
-            //
+            // 
             // cmbAnimation
-            //
+            // 
             this.cmbAnimation.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(69)))), ((int)(((byte)(73)))), ((int)(((byte)(74)))));
             this.cmbAnimation.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.cmbAnimation.BorderStyle = System.Windows.Forms.ButtonBorderStyle.Solid;
@@ -457,9 +457,9 @@ private void InitializeComponent()
             this.cmbAnimation.Text = null;
             this.cmbAnimation.TextPadding = new System.Windows.Forms.Padding(2);
             this.cmbAnimation.SelectedIndexChanged += new System.EventHandler(this.cmbAnimation_SelectedIndexChanged);
-            //
+            // 
             // pnlPreview
-            //
+            // 
             this.pnlPreview.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(60)))), ((int)(((byte)(63)))), ((int)(((byte)(65)))));
             this.pnlPreview.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
             this.pnlPreview.Location = new System.Drawing.Point(33, 14);
@@ -467,9 +467,9 @@ private void InitializeComponent()
             this.pnlPreview.Size = new System.Drawing.Size(96, 96);
             this.pnlPreview.TabIndex = 0;
             this.pnlPreview.DoubleClick += new System.EventHandler(this.pnlPreview_DoubleClick);
-            //
+            // 
             // grpMovement
-            //
+            // 
             this.grpMovement.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(45)))), ((int)(((byte)(45)))), ((int)(((byte)(48)))));
             this.grpMovement.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.grpMovement.Controls.Add(this.lblLayer);
@@ -488,18 +488,18 @@ private void InitializeComponent()
             this.grpMovement.TabIndex = 8;
             this.grpMovement.TabStop = false;
             this.grpMovement.Text = "Movement";
-            //
+            // 
             // lblLayer
-            //
+            // 
             this.lblLayer.AutoSize = true;
             this.lblLayer.Location = new System.Drawing.Point(6, 134);
             this.lblLayer.Name = "lblLayer";
             this.lblLayer.Size = new System.Drawing.Size(36, 13);
             this.lblLayer.TabIndex = 7;
             this.lblLayer.Text = "Layer:";
-            //
+            // 
             // cmbLayering
-            //
+            // 
             this.cmbLayering.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(69)))), ((int)(((byte)(73)))), ((int)(((byte)(74)))));
             this.cmbLayering.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.cmbLayering.BorderStyle = System.Windows.Forms.ButtonBorderStyle.Solid;
@@ -523,9 +523,9 @@ private void InitializeComponent()
             this.cmbLayering.Text = "Below Player";
             this.cmbLayering.TextPadding = new System.Windows.Forms.Padding(2);
             this.cmbLayering.SelectedIndexChanged += new System.EventHandler(this.cmbLayering_SelectedIndexChanged);
-            //
+            // 
             // cmbEventFreq
-            //
+            // 
             this.cmbEventFreq.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(69)))), ((int)(((byte)(73)))), ((int)(((byte)(74)))));
             this.cmbEventFreq.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.cmbEventFreq.BorderStyle = System.Windows.Forms.ButtonBorderStyle.Solid;
@@ -551,9 +551,9 @@ private void InitializeComponent()
             this.cmbEventFreq.Text = "Not Very Often";
             this.cmbEventFreq.TextPadding = new System.Windows.Forms.Padding(2);
             this.cmbEventFreq.SelectedIndexChanged += new System.EventHandler(this.cmbEventFreq_SelectedIndexChanged);
-            //
+            // 
             // cmbEventSpeed
-            //
+            // 
             this.cmbEventSpeed.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(69)))), ((int)(((byte)(73)))), ((int)(((byte)(74)))));
             this.cmbEventSpeed.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.cmbEventSpeed.BorderStyle = System.Windows.Forms.ButtonBorderStyle.Solid;
@@ -579,27 +579,27 @@ private void InitializeComponent()
             this.cmbEventSpeed.Text = "Slowest";
             this.cmbEventSpeed.TextPadding = new System.Windows.Forms.Padding(2);
             this.cmbEventSpeed.SelectedIndexChanged += new System.EventHandler(this.cmbEventSpeed_SelectedIndexChanged);
-            //
+            // 
             // lblFreq
-            //
+            // 
             this.lblFreq.AutoSize = true;
             this.lblFreq.Location = new System.Drawing.Point(6, 107);
             this.lblFreq.Name = "lblFreq";
             this.lblFreq.Size = new System.Drawing.Size(31, 13);
             this.lblFreq.TabIndex = 4;
             this.lblFreq.Text = "Freq:";
-            //
+            // 
             // lblSpeed
-            //
+            // 
             this.lblSpeed.AutoSize = true;
             this.lblSpeed.Location = new System.Drawing.Point(6, 80);
             this.lblSpeed.Name = "lblSpeed";
             this.lblSpeed.Size = new System.Drawing.Size(41, 13);
             this.lblSpeed.TabIndex = 3;
             this.lblSpeed.Text = "Speed:";
-            //
+            // 
             // btnSetRoute
-            //
+            // 
             this.btnSetRoute.Enabled = false;
             this.btnSetRoute.Location = new System.Drawing.Point(73, 43);
             this.btnSetRoute.Name = "btnSetRoute";
@@ -608,18 +608,18 @@ private void InitializeComponent()
             this.btnSetRoute.TabIndex = 2;
             this.btnSetRoute.Text = "Set Route....";
             this.btnSetRoute.Click += new System.EventHandler(this.btnSetRoute_Click);
-            //
+            // 
             // lblType
-            //
+            // 
             this.lblType.AutoSize = true;
             this.lblType.Location = new System.Drawing.Point(6, 22);
             this.lblType.Name = "lblType";
             this.lblType.Size = new System.Drawing.Size(34, 13);
             this.lblType.TabIndex = 1;
             this.lblType.Text = "Type:";
-            //
+            // 
             // cmbMoveType
-            //
+            // 
             this.cmbMoveType.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(69)))), ((int)(((byte)(73)))), ((int)(((byte)(74)))));
             this.cmbMoveType.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.cmbMoveType.BorderStyle = System.Windows.Forms.ButtonBorderStyle.Solid;
@@ -643,9 +643,9 @@ private void InitializeComponent()
             this.cmbMoveType.Text = "None";
             this.cmbMoveType.TextPadding = new System.Windows.Forms.Padding(2);
             this.cmbMoveType.SelectedIndexChanged += new System.EventHandler(this.cmbMoveType_SelectedIndexChanged);
-            //
+            // 
             // grpTriggers
-            //
+            // 
             this.grpTriggers.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(45)))), ((int)(((byte)(45)))), ((int)(((byte)(48)))));
             this.grpTriggers.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.grpTriggers.Controls.Add(this.txtCommand);
@@ -660,9 +660,9 @@ private void InitializeComponent()
             this.grpTriggers.TabIndex = 21;
             this.grpTriggers.TabStop = false;
             this.grpTriggers.Text = "Trigger";
-            //
+            // 
             // txtCommand
-            //
+            // 
             this.txtCommand.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(69)))), ((int)(((byte)(73)))), ((int)(((byte)(74)))));
             this.txtCommand.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
             this.txtCommand.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(220)))), ((int)(((byte)(220)))), ((int)(((byte)(220)))));
@@ -672,9 +672,9 @@ private void InitializeComponent()
             this.txtCommand.TabIndex = 12;
             this.txtCommand.Visible = false;
             this.txtCommand.TextChanged += new System.EventHandler(this.txtCommand_TextChanged);
-            //
+            // 
             // lblCommand
-            //
+            // 
             this.lblCommand.AutoSize = true;
             this.lblCommand.Location = new System.Drawing.Point(113, 17);
             this.lblCommand.Name = "lblCommand";
@@ -682,9 +682,9 @@ private void InitializeComponent()
             this.lblCommand.TabIndex = 11;
             this.lblCommand.Text = "/Command: /";
             this.lblCommand.Visible = false;
-            //
+            // 
             // lblTriggerVal
-            //
+            // 
             this.lblTriggerVal.AutoSize = true;
             this.lblTriggerVal.Location = new System.Drawing.Point(113, 17);
             this.lblTriggerVal.Name = "lblTriggerVal";
@@ -692,9 +692,9 @@ private void InitializeComponent()
             this.lblTriggerVal.TabIndex = 10;
             this.lblTriggerVal.Text = "Projectile:";
             this.lblTriggerVal.Visible = false;
-            //
+            // 
             // cmbTriggerVal
-            //
+            // 
             this.cmbTriggerVal.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(69)))), ((int)(((byte)(73)))), ((int)(((byte)(74)))));
             this.cmbTriggerVal.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.cmbTriggerVal.BorderStyle = System.Windows.Forms.ButtonBorderStyle.Solid;
@@ -716,9 +716,9 @@ private void InitializeComponent()
             this.cmbTriggerVal.Text = "None";
             this.cmbTriggerVal.TextPadding = new System.Windows.Forms.Padding(2);
             this.cmbTriggerVal.Visible = false;
-            //
+            // 
             // cmbTrigger
-            //
+            // 
             this.cmbTrigger.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(69)))), ((int)(((byte)(73)))), ((int)(((byte)(74)))));
             this.cmbTrigger.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.cmbTrigger.BorderStyle = System.Windows.Forms.ButtonBorderStyle.Solid;
@@ -743,9 +743,9 @@ private void InitializeComponent()
             this.cmbTrigger.Text = "Action Button";
             this.cmbTrigger.TextPadding = new System.Windows.Forms.Padding(2);
             this.cmbTrigger.SelectedIndexChanged += new System.EventHandler(this.cmbTrigger_SelectedIndexChanged);
-            //
+            // 
             // grpEventConditions
-            //
+            // 
             this.grpEventConditions.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(45)))), ((int)(((byte)(45)))), ((int)(((byte)(48)))));
             this.grpEventConditions.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.grpEventConditions.Controls.Add(this.btnEditConditions);
@@ -756,9 +756,9 @@ private void InitializeComponent()
             this.grpEventConditions.TabIndex = 5;
             this.grpEventConditions.TabStop = false;
             this.grpEventConditions.Text = "Conditions";
-            //
+            // 
             // btnEditConditions
-            //
+            // 
             this.btnEditConditions.Location = new System.Drawing.Point(7, 20);
             this.btnEditConditions.Name = "btnEditConditions";
             this.btnEditConditions.Padding = new System.Windows.Forms.Padding(5);
@@ -766,9 +766,9 @@ private void InitializeComponent()
             this.btnEditConditions.TabIndex = 0;
             this.btnEditConditions.Text = "Spawn/Execution Conditions";
             this.btnEditConditions.Click += new System.EventHandler(this.btnEditConditions_Click);
-            //
+            // 
             // grpNewCommands
-            //
+            // 
             this.grpNewCommands.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(45)))), ((int)(((byte)(45)))), ((int)(((byte)(48)))));
             this.grpNewCommands.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.grpNewCommands.Controls.Add(this.lblCloseCommands);
@@ -781,9 +781,9 @@ private void InitializeComponent()
             this.grpNewCommands.TabStop = false;
             this.grpNewCommands.Text = "Add Commands";
             this.grpNewCommands.Visible = false;
-            //
+            // 
             // lblCloseCommands
-            //
+            // 
             this.lblCloseCommands.AutoSize = true;
             this.lblCloseCommands.Location = new System.Drawing.Point(437, 14);
             this.lblCloseCommands.Name = "lblCloseCommands";
@@ -791,9 +791,9 @@ private void InitializeComponent()
             this.lblCloseCommands.TabIndex = 1;
             this.lblCloseCommands.Text = "X";
             this.lblCloseCommands.Click += new System.EventHandler(this.lblCloseCommands_Click);
-            //
+            // 
             // lstCommands
-            //
+            // 
             this.lstCommands.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(60)))), ((int)(((byte)(63)))), ((int)(((byte)(65)))));
             this.lstCommands.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
             this.lstCommands.ForeColor = System.Drawing.Color.Gainsboro;
@@ -858,9 +858,9 @@ private void InitializeComponent()
             treeNode20.Name = "changeitems";
             treeNode20.Tag = "18";
             treeNode20.Text = "Change Items";
-            treeNode21.Name = "takeitemsbytag";
+            treeNode21.Name = "changeitemsbytag";
             treeNode21.Tag = "51";
-            treeNode21.Text = "Take Items By Tag";
+            treeNode21.Text = "Change Items By Tag";
             treeNode22.Name = "changesprite";
             treeNode22.Tag = "19";
             treeNode22.Text = "Change Sprite";
@@ -978,9 +978,9 @@ private void InitializeComponent()
             this.lstCommands.Size = new System.Drawing.Size(445, 440);
             this.lstCommands.TabIndex = 2;
             this.lstCommands.NodeMouseDoubleClick += new System.Windows.Forms.TreeNodeMouseClickEventHandler(this.lstCommands_NodeMouseDoubleClick);
-            //
+            // 
             // grpEventCommands
-            //
+            // 
             this.grpEventCommands.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(45)))), ((int)(((byte)(45)))), ((int)(((byte)(48)))));
             this.grpEventCommands.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.grpEventCommands.Controls.Add(this.lstEventCommands);
@@ -991,9 +991,9 @@ private void InitializeComponent()
             this.grpEventCommands.TabIndex = 6;
             this.grpEventCommands.TabStop = false;
             this.grpEventCommands.Text = "Commands";
-            //
+            // 
             // lstEventCommands
-            //
+            // 
             this.lstEventCommands.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(60)))), ((int)(((byte)(63)))), ((int)(((byte)(65)))));
             this.lstEventCommands.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
             this.lstEventCommands.ForeColor = System.Drawing.Color.Gainsboro;
@@ -1009,9 +1009,9 @@ private void InitializeComponent()
             this.lstEventCommands.DoubleClick += new System.EventHandler(this.lstEventCommands_DoubleClick);
             this.lstEventCommands.KeyDown += new System.Windows.Forms.KeyEventHandler(this.lstEventCommands_KeyDown);
             this.lstEventCommands.MouseDown += new System.Windows.Forms.MouseEventHandler(this.lstEventCommands_Click);
-            //
+            // 
             // grpCreateCommands
-            //
+            // 
             this.grpCreateCommands.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(45)))), ((int)(((byte)(45)))), ((int)(((byte)(48)))));
             this.grpCreateCommands.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.grpCreateCommands.ForeColor = System.Drawing.Color.Gainsboro;
@@ -1021,9 +1021,9 @@ private void InitializeComponent()
             this.grpCreateCommands.TabIndex = 8;
             this.grpCreateCommands.TabStop = false;
             this.grpCreateCommands.Visible = false;
-            //
+            // 
             // btnSave
-            //
+            // 
             this.btnSave.Location = new System.Drawing.Point(628, 586);
             this.btnSave.Name = "btnSave";
             this.btnSave.Padding = new System.Windows.Forms.Padding(5);
@@ -1031,9 +1031,9 @@ private void InitializeComponent()
             this.btnSave.TabIndex = 6;
             this.btnSave.Text = "Save";
             this.btnSave.Click += new System.EventHandler(this.btnSave_Click);
-            //
+            // 
             // btnCancel
-            //
+            // 
             this.btnCancel.Location = new System.Drawing.Point(727, 586);
             this.btnCancel.Name = "btnCancel";
             this.btnCancel.Padding = new System.Windows.Forms.Padding(5);
@@ -1041,9 +1041,9 @@ private void InitializeComponent()
             this.btnCancel.TabIndex = 7;
             this.btnCancel.Text = "Cancel";
             this.btnCancel.Click += new System.EventHandler(this.btnCancel_Click);
-            //
+            // 
             // commandMenu
-            //
+            // 
             this.commandMenu.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(60)))), ((int)(((byte)(63)))), ((int)(((byte)(65)))));
             this.commandMenu.ImageScalingSize = new System.Drawing.Size(24, 24);
             this.commandMenu.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {
@@ -1056,57 +1056,57 @@ private void InitializeComponent()
             this.commandMenu.Name = "commandMenu";
             this.commandMenu.RenderMode = System.Windows.Forms.ToolStripRenderMode.System;
             this.commandMenu.Size = new System.Drawing.Size(108, 136);
-            //
+            // 
             // btnInsert
-            //
+            // 
             this.btnInsert.ForeColor = System.Drawing.Color.Gainsboro;
             this.btnInsert.Name = "btnInsert";
             this.btnInsert.Size = new System.Drawing.Size(107, 22);
             this.btnInsert.Text = "Insert";
             this.btnInsert.Click += new System.EventHandler(this.btnInsert_Click);
-            //
+            // 
             // btnEdit
-            //
+            // 
             this.btnEdit.ForeColor = System.Drawing.Color.Gainsboro;
             this.btnEdit.Name = "btnEdit";
             this.btnEdit.Size = new System.Drawing.Size(107, 22);
             this.btnEdit.Text = "Edit";
             this.btnEdit.Click += new System.EventHandler(this.btnEdit_Click);
-            //
+            // 
             // btnCut
-            //
+            // 
             this.btnCut.ForeColor = System.Drawing.Color.Gainsboro;
             this.btnCut.Name = "btnCut";
             this.btnCut.Size = new System.Drawing.Size(107, 22);
             this.btnCut.Text = "Cut";
             this.btnCut.Click += new System.EventHandler(this.btnCut_Click);
-            //
+            // 
             // btnCopy
-            //
+            // 
             this.btnCopy.ForeColor = System.Drawing.Color.Gainsboro;
             this.btnCopy.Name = "btnCopy";
             this.btnCopy.Size = new System.Drawing.Size(107, 22);
             this.btnCopy.Text = "Copy";
             this.btnCopy.Click += new System.EventHandler(this.btnCopy_Click);
-            //
+            // 
             // btnPaste
-            //
+            // 
             this.btnPaste.ForeColor = System.Drawing.Color.Gainsboro;
             this.btnPaste.Name = "btnPaste";
             this.btnPaste.Size = new System.Drawing.Size(107, 22);
             this.btnPaste.Text = "Paste";
             this.btnPaste.Click += new System.EventHandler(this.btnPaste_Click);
-            //
+            // 
             // btnDelete
-            //
+            // 
             this.btnDelete.ForeColor = System.Drawing.Color.Gainsboro;
             this.btnDelete.Name = "btnDelete";
             this.btnDelete.Size = new System.Drawing.Size(107, 22);
             this.btnDelete.Text = "Delete";
             this.btnDelete.Click += new System.EventHandler(this.btnDelete_Click);
-            //
+            // 
             // grpPageOptions
-            //
+            // 
             this.grpPageOptions.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(45)))), ((int)(((byte)(45)))), ((int)(((byte)(48)))));
             this.grpPageOptions.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.grpPageOptions.Controls.Add(this.btnClearPage);
@@ -1121,9 +1121,9 @@ private void InitializeComponent()
             this.grpPageOptions.TabIndex = 13;
             this.grpPageOptions.TabStop = false;
             this.grpPageOptions.Text = "Page Options";
-            //
+            // 
             // btnClearPage
-            //
+            // 
             this.btnClearPage.Location = new System.Drawing.Point(402, 16);
             this.btnClearPage.Name = "btnClearPage";
             this.btnClearPage.Padding = new System.Windows.Forms.Padding(5);
@@ -1131,9 +1131,9 @@ private void InitializeComponent()
             this.btnClearPage.TabIndex = 17;
             this.btnClearPage.Text = "Clear Page";
             this.btnClearPage.Click += new System.EventHandler(this.btnClearPage_Click);
-            //
+            // 
             // btnDeletePage
-            //
+            // 
             this.btnDeletePage.Enabled = false;
             this.btnDeletePage.Location = new System.Drawing.Point(303, 16);
             this.btnDeletePage.Name = "btnDeletePage";
@@ -1142,9 +1142,9 @@ private void InitializeComponent()
             this.btnDeletePage.TabIndex = 16;
             this.btnDeletePage.Text = "Delete Page";
             this.btnDeletePage.Click += new System.EventHandler(this.btnDeletePage_Click);
-            //
+            // 
             // btnPastePage
-            //
+            // 
             this.btnPastePage.Location = new System.Drawing.Point(204, 16);
             this.btnPastePage.Name = "btnPastePage";
             this.btnPastePage.Padding = new System.Windows.Forms.Padding(5);
@@ -1152,9 +1152,9 @@ private void InitializeComponent()
             this.btnPastePage.TabIndex = 15;
             this.btnPastePage.Text = "Paste Page";
             this.btnPastePage.Click += new System.EventHandler(this.btnPastePage_Click);
-            //
+            // 
             // btnCopyPage
-            //
+            // 
             this.btnCopyPage.Location = new System.Drawing.Point(105, 16);
             this.btnCopyPage.Name = "btnCopyPage";
             this.btnCopyPage.Padding = new System.Windows.Forms.Padding(5);
@@ -1162,9 +1162,9 @@ private void InitializeComponent()
             this.btnCopyPage.TabIndex = 14;
             this.btnCopyPage.Text = "Copy Page";
             this.btnCopyPage.Click += new System.EventHandler(this.btnCopyPage_Click);
-            //
+            // 
             // btnNewPage
-            //
+            // 
             this.btnNewPage.Location = new System.Drawing.Point(6, 16);
             this.btnNewPage.Name = "btnNewPage";
             this.btnNewPage.Padding = new System.Windows.Forms.Padding(5);
@@ -1172,9 +1172,9 @@ private void InitializeComponent()
             this.btnNewPage.TabIndex = 13;
             this.btnNewPage.Text = "New Page";
             this.btnNewPage.Click += new System.EventHandler(this.btnNewPage_Click);
-            //
+            // 
             // grpGeneral
-            //
+            // 
             this.grpGeneral.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(45)))), ((int)(((byte)(45)))), ((int)(((byte)(48)))));
             this.grpGeneral.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
             this.grpGeneral.Controls.Add(this.chkIsGlobal);
@@ -1187,9 +1187,9 @@ private void InitializeComponent()
             this.grpGeneral.TabIndex = 18;
             this.grpGeneral.TabStop = false;
             this.grpGeneral.Text = "General";
-            //
+            // 
             // chkIsGlobal
-            //
+            // 
             this.chkIsGlobal.AutoSize = true;
             this.chkIsGlobal.Location = new System.Drawing.Point(202, 22);
             this.chkIsGlobal.Name = "chkIsGlobal";
@@ -1197,25 +1197,25 @@ private void InitializeComponent()
             this.chkIsGlobal.TabIndex = 3;
             this.chkIsGlobal.Text = "Global Event";
             this.chkIsGlobal.CheckedChanged += new System.EventHandler(this.chkIsGlobal_CheckedChanged);
-            //
+            // 
             // pnlTabsContainer
-            //
+            // 
             this.pnlTabsContainer.Controls.Add(this.pnlTabs);
             this.pnlTabsContainer.Location = new System.Drawing.Point(12, 61);
             this.pnlTabsContainer.Name = "pnlTabsContainer";
             this.pnlTabsContainer.Size = new System.Drawing.Size(811, 22);
             this.pnlTabsContainer.TabIndex = 22;
-            //
+            // 
             // pnlTabs
-            //
+            // 
             this.pnlTabs.AutoSize = true;
             this.pnlTabs.Location = new System.Drawing.Point(0, 0);
             this.pnlTabs.Name = "pnlTabs";
             this.pnlTabs.Size = new System.Drawing.Size(811, 22);
             this.pnlTabs.TabIndex = 23;
-            //
+            // 
             // btnTabsRight
-            //
+            // 
             this.btnTabsRight.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right)));
             this.btnTabsRight.Location = new System.Drawing.Point(773, 61);
             this.btnTabsRight.Name = "btnTabsRight";
@@ -1224,9 +1224,9 @@ private void InitializeComponent()
             this.btnTabsRight.TabIndex = 1;
             this.btnTabsRight.Text = ">";
             this.btnTabsRight.Click += new System.EventHandler(this.btnTabsRight_Click);
-            //
+            // 
             // btnTabsLeft
-            //
+            // 
             this.btnTabsLeft.Location = new System.Drawing.Point(12, 61);
             this.btnTabsLeft.Name = "btnTabsLeft";
             this.btnTabsLeft.Padding = new System.Windows.Forms.Padding(5);
@@ -1234,17 +1234,17 @@ private void InitializeComponent()
             this.btnTabsLeft.TabIndex = 0;
             this.btnTabsLeft.Text = "<";
             this.btnTabsLeft.Click += new System.EventHandler(this.btnTabsLeft_Click);
-            //
+            // 
             // panel1
-            //
+            // 
             this.panel1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
             this.panel1.Location = new System.Drawing.Point(12, 83);
             this.panel1.Name = "panel1";
             this.panel1.Size = new System.Drawing.Size(811, 498);
             this.panel1.TabIndex = 23;
-            //
+            // 
             // FrmEvent
-            //
+            // 
             this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
             this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
             this.AutoSize = true;
diff --git a/Intersect.Editor/Forms/Editors/Events/frmEvent.cs b/Intersect.Editor/Forms/Editors/Events/frmEvent.cs
index 355a6560..9f5c4e8a 100644
--- a/Intersect.Editor/Forms/Editors/Events/frmEvent.cs
+++ b/Intersect.Editor/Forms/Editors/Events/frmEvent.cs
@@ -712,8 +712,8 @@ private void lstCommands_NodeMouseDoubleClick(object sender, TreeNodeMouseClickE
 
                     break;
 
-                case EventCommandType.TakeItemsByTag:
-                    tmpCommand = new TakeItemsByTag(CurrentPage.CommandLists);
+                case EventCommandType.ChangeItemsByTag:
+                    tmpCommand = new ChangeItemsByTag(CurrentPage.CommandLists);
 
                     break;
                 default:
@@ -1284,8 +1284,8 @@ private void OpenEditCommand(EventCommand command)
                     cmdWindow = new EventCommandEndQuest((EndQuestCommand) command, this);
 
                     break;
-                case EventCommandType.TakeItemsByTag:
-                    cmdWindow = new EventCommandTakeItemsBytag((TakeItemsByTag)command, CurrentPage, this);
+                case EventCommandType.ChangeItemsByTag:
+                    cmdWindow = new EventCommandChangeItemsBytag((ChangeItemsByTag)command, CurrentPage, this);
 
                     break;
                 default:
diff --git a/Intersect.Editor/Intersect.Editor.csproj b/Intersect.Editor/Intersect.Editor.csproj
index d681756b..cf0d8abf 100644
--- a/Intersect.Editor/Intersect.Editor.csproj
+++ b/Intersect.Editor/Intersect.Editor.csproj
@@ -86,11 +86,11 @@
     <Compile Include="Core\Preferences.cs" />
     <Compile Include="Core\Program.cs" />
     <Compile Include="Entities\Animation.cs" />
-    <Compile Include="Forms\Editors\Events\Event Commands\EventCommand_TakeItemsByTag.cs">
+    <Compile Include="Forms\Editors\Events\Event Commands\EventCommand_ChangeItemsByTag.cs">
       <SubType>UserControl</SubType>
     </Compile>
-    <Compile Include="Forms\Editors\Events\Event Commands\EventCommand_TakeItemsByTag.Designer.cs">
-      <DependentUpon>EventCommand_TakeItemsByTag.cs</DependentUpon>
+    <Compile Include="Forms\Editors\Events\Event Commands\EventCommand_ChangeItemsByTag.Designer.cs">
+      <DependentUpon>EventCommand_ChangeItemsByTag.cs</DependentUpon>
     </Compile>
     <Compile Include="Forms\frmUpdate.cs">
       <SubType>Form</SubType>
@@ -660,8 +660,8 @@
     <EmbeddedResource Include="Forms\Editors\Events\Event Commands\EventCommand_ChangeGender.resx">
       <DependentUpon>EventCommand_ChangeGender.cs</DependentUpon>
     </EmbeddedResource>
-    <EmbeddedResource Include="Forms\Editors\Events\Event Commands\EventCommand_TakeItemsByTag.resx">
-      <DependentUpon>EventCommand_TakeItemsByTag.cs</DependentUpon>
+    <EmbeddedResource Include="Forms\Editors\Events\Event Commands\EventCommand_ChangeItemsByTag.resx">
+      <DependentUpon>EventCommand_ChangeItemsByTag.cs</DependentUpon>
     </EmbeddedResource>
     <EmbeddedResource Include="Forms\Editors\Events\Event Commands\EventCommand_ChangeVital.resx">
       <DependentUpon>EventCommand_ChangeVital.cs</DependentUpon>
diff --git a/Intersect.Editor/Localization/Strings.cs b/Intersect.Editor/Localization/Strings.cs
index 059d7679..753abf61 100644
--- a/Intersect.Editor/Localization/Strings.cs
+++ b/Intersect.Editor/Localization/Strings.cs
@@ -1251,18 +1251,24 @@ public struct EventChangeItems
 
         }
 
-        public struct EventTakeItemByTag
+        public struct EventChangeItemsByTag
         {
 
             public static LocalizedString tag = @"Tag:";
 
+            public static Dictionary<int, LocalizedString> actions = new Dictionary<int, LocalizedString>
+            {
+                {0, @"Give"},
+                {1, @"Take"},
+            };
+
             public static LocalizedString amount = @"Amount:";
 
             public static LocalizedString cancel = @"Cancel";
 
             public static LocalizedString okay = @"Ok";
 
-            public static LocalizedString title = @"Take Items By Tag";
+            public static LocalizedString title = @"Change Items By Tag:";
 
         }
 
@@ -1490,7 +1496,7 @@ public struct EventCommandList
 
             public static LocalizedString enditemchange = @"End Item Change";
 
-            public static LocalizedString endtakeitemsbytag = @"End Take Items by Tag";
+            public static LocalizedString endchangeitemsbytag = @"End Change Items by Tag";
 
             public static LocalizedString endoptions = @"End Options";
 
@@ -1532,11 +1538,11 @@ public struct EventCommandList
 
             public static LocalizedString itemnotchanged = @"Item(s) Not Given/Taken (Doesn't have/Inventory full)";
 
-            public static LocalizedString itemsnottakenbytag = @"Item(s) Not Taken (Doesn't have)";
+            public static LocalizedString itemnotchangedbytag = @"Item(s) Not Given/Taken (Doesn't have/Inventory full)";
 
             public static LocalizedString itemschanged = @"Item(s) Given/Taken Successfully";
 
-            public static LocalizedString itemstakenbytag = @"Item(s) Taken Successfully";
+            public static LocalizedString itemchangedbytag = @"Item(s) Given/Taken Successfully";
 
             public static LocalizedString label = @"Label: {00}";
 
@@ -1670,7 +1676,7 @@ public struct EventCommandList
 
             public static LocalizedString take = @"Take: Item {00}";
 
-            public static LocalizedString takeitemsbytag = @"Take Items by Tag: {00}";
+            public static LocalizedString changeitemsbytag = @"Change Items by Tag: {00}";
 
             public static LocalizedString taskundefined = @"Undefined";
 
@@ -1755,7 +1761,7 @@ public struct EventCommands
                 {"changenamecolor", @"Change Name Color"},
                 {"inputvariable", @"Input Variable"},
                 {"changeplayerlabel", @"Change Player Label"},
-                {"takeitemsbytag", "Take Items By Tag" },
+                {"changeitemsbytag", "Change Items By Tag" },
             };
 
         }
diff --git a/Intersect.Server/Entities/Events/CommandProcessing.cs b/Intersect.Server/Entities/Events/CommandProcessing.cs
index 6f1e1377..490f4969 100644
--- a/Intersect.Server/Entities/Events/CommandProcessing.cs
+++ b/Intersect.Server/Entities/Events/CommandProcessing.cs
@@ -450,7 +450,7 @@ Stack<CommandInstance> callStack
 
         //Take Items By tag Command
         private static void ProcessCommand(
-            TakeItemsByTag command,
+            ChangeItemsByTag command,
             Player player,
             Event instance,
             CommandInstance stackInfo,
@@ -459,7 +459,7 @@ Stack<CommandInstance> callStack
         {
             var success = false;
 
-            // Retrieve all items that have the tag we're looking for so we can see if the user has these item(s).
+            // Retrieve all items that have the tag we're looking for so we can use this list to check against their inventory, or pick a random item!.
             var potentialItems = new List<Guid>();
             foreach (var dbObject in ItemBase.Lookup.Values)
             {
@@ -470,44 +470,62 @@ Stack<CommandInstance> callStack
                 }
             }
 
-            // Find all inventory slots that has the items we've looked up above.
-            var inventorySlots = new List<int>();
-            for (var slot = 0; slot < Options.MaxInvItems; slot++)
-            {
-                if (potentialItems.Contains(player.Items[slot].ItemId))
-                {
-                    inventorySlots.Add(slot);
-                }
-            }
-
             // Create a backup of our inventory in case we end up not being able to remove all required items and want to revert.
             var invBackup = player.Items.Select(item => item?.Clone()).ToList();
 
-            // Keep track of how many items we have to remove still.
-            var toRemove = command.Quantity;
+            // Going to use this to keep track of how many items we have to change.
+            var changed = 0;
 
-            // Go through each inventory slot we've retrieved before and attempt to remove as many items as we need.
-            foreach(var slot in inventorySlots)
+            //Check if we're going to be giving or taking items.
+            if (command.Add) // Add Items to the inventory!
+            {
+                // Go through the amout of items we have to give, and pick a random item from our list of potential items to attempt to give to our player.
+                var randomizer = new Random();
+                for (var attempt = 0; attempt < command.Quantity; attempt++) 
+                { 
+                    if (player.TryGiveItem(potentialItems[randomizer.Next(potentialItems.Count)], 1, false, false)) 
+                    {
+                        changed += 1;
+                    }
+                }
+            }
+            else // Remove Items from the inventory!
             {
-                if (toRemove > 0)
+                // Find all inventory slots that has the items we've looked up above.
+                var inventorySlots = new List<int>();
+                for (var slot = 0; slot < Options.MaxInvItems; slot++)
                 {
-                    var removed = 0;
-                    for (var attempt = 0; attempt < toRemove; attempt++)
+                    if (potentialItems.Contains(player.Items[slot].ItemId))
                     {
-                        if (player.TakeItemsBySlot(slot, 1))
+                        inventorySlots.Add(slot);
+                    }
+                }
+
+                // Go through each inventory slot we've retrieved before and attempt to remove as many items as we need.
+                foreach (var slot in inventorySlots)
+                {
+                    // No point looping further if we are at the correct quantity!
+                    if (changed == command.Quantity) break;
+
+                    for (var attempt = 0; attempt < command.Quantity; attempt++)
+                    {
+                        if (player.TakeItemsBySlot(slot, 1, false))
                         {
-                            removed += 1;
+                            changed += 1;
+
+                            // No point looping further if we are at the correct quantity!
+                            if (changed == command.Quantity) break;
                         }
                     }
-
-                    toRemove -= removed;
                 }
             }
 
-            // Do we still have items left to remove or did we finish?
-            if (toRemove == 0)
+            // Do we still have items left to change or did we finish?
+            if ((command.Quantity - changed) == 0)
             {
+                // We've succeeded! Let's update the inventory.
                 success = true;
+                PacketSender.SendInventory(player);
             }
             else
             {
@@ -520,7 +538,6 @@ Stack<CommandInstance> callStack
                 PacketSender.SendInventory(player);
             }
 
-
             // Process other events.
             List<EventCommand> newCommandList = null;
             if (success && stackInfo.Page.CommandLists.ContainsKey(command.BranchIds[0]))
diff --git a/Intersect.Server/Entities/Player.cs b/Intersect.Server/Entities/Player.cs
index 2c140f1d..69185b9d 100644
--- a/Intersect.Server/Entities/Player.cs
+++ b/Intersect.Server/Entities/Player.cs
@@ -1747,7 +1747,7 @@ public void UseItem(int slot, Entity target = null)
             }
         }
 
-        public bool TakeItemsBySlot(int slot, int amount)
+        public bool TakeItemsBySlot(int slot, int amount, bool sendUpdate = true)
         {
             var returnVal = false;
             if (slot < 0)
@@ -1786,7 +1786,10 @@ public bool TakeItemsBySlot(int slot, int amount)
                     returnVal = true;
                 }
 
-                PacketSender.SendInventoryItemUpdate(this, slot);
+                if (sendUpdate)
+                {
+                    PacketSender.SendInventoryItemUpdate(this, slot);
+                }
             }
 
             if (returnVal)
